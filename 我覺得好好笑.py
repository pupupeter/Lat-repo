# -*- coding: utf-8 -*-
"""我覺得好好笑.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nepox0hBxvlGIue5TNmwlalJdG3baaAy
"""

pip install diffusers

pip install accelerate>=0.17.0

pip install xformers

pip install -U gradio

import gradio as gr
import torch
from diffusers import StableDiffusionXLImg2ImgPipeline
from PIL import Image


pipe = StableDiffusionXLImg2ImgPipeline.from_pretrained(
    "stabilityai/stable-diffusion-xl-refiner-1.0", torch_dtype=torch.float16, variant="fp16", use_safetensors=True
)
pipe = pipe.to("cuda")

def process_image(input_image, category, extra_traits):
    try:
        # 把 Gradio 接收的图像转换为模型可接受的格式
        init_image = Image.fromarray(input_image).convert("RGB")

        # 根据选择的类别定义不同的 prompt (讓ai跑的特質)和 negative_prompt(ai不要幫你跑的特質)
        categories = {
            "男生": "帥氣,陽光,英俊,體貼,溫柔",
            "女生": "美麗,可愛,溫柔,柔弱,嬌俏",
            "物品": "實用,時尚,美觀,高品質,耐用",
            "動物": "可愛,忠誠,聰明,可靠,親人",
            "植物": "清新,綠色,生機,美麗,芬芳"
        }

        prompt = categories.get(category, "")
        if extra_traits:
            prompt += ", " + extra_traits
        negative_prompt = "醜陋,破舊,無用,野蠻,兇猛"

        # 将 prompt(把給ai的東西) 和图像传递给 pipeline
        output = pipe(prompt, image=init_image, negative_prompt=negative_prompt)
        output_image = output.images[0]

        # 返回处理后的图像
        return output_image
    except Exception as e:
        print(f"An error occurred: {e}")
        return None

with gr.Blocks() as demo:
    gr.Markdown("我是123")

    with gr.Tab("轉換"):
        with gr.Column():
            png_input = gr.Image(label="上傳圖像", type="numpy")
            wordtype_input = gr.Radio(choices=["男生", "女生", "物品", "動物", "植物"], label="請選擇種類")
            text_input = gr.Textbox(label="請輸入想要什麼額外的特質")
            text_button = gr.Button("給我轉喔不然我哭給你看喔嗚嗚嗚")
            png_output = gr.Image(label="處理後的圖像")

    text_button.click(process_image, inputs=[png_input, wordtype_input, text_input], outputs=png_output)

demo.launch()

process_image

